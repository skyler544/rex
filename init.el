;;; -*- lexical-binding: t -*-
;;
;; Welcome to rex! This Emacs configuration is intended to be simple to
;; understand and extend. Emphasis is placed on the use of well- documented,
;; modular packages. Configuration is aided and organized via use-package. Key
;; bindings are defined with general.el.
;;
;; Each use-package block should contain configuration for a single package and
;; should be entirely standalone. Disabling a use-package block should not break
;; the operation of any other package. This is not always entirely feasible, but
;; the effort should be made.
;;
;; Configuration for specific areas-of-concern should be done within a
;; standalone file inside the config/ directory. Such files may then be
;; explicitly loaded here. Disabling a file by removing or commenting out the
;; line that loads it should not break the rest of the configuration.

(use-package emacs
  :elpaca nil
  :config
  ;; Do not add custom settings to the end of init.el. This file is never
  ;; loaded; the intention is to have a place where the code generated by custom
  ;; can land, and if desired, may be added to the configuration
  ;; programmatically. This file may be deleted at any time without adverse
  ;; effects. TODO: check why custom.el stopped appearing after migrating to
  ;; elpaca. Is this still needed?
  (setq custom-file (concat rex/cache-dir "custom.el"))

  ;; Custom elisp functions.
  (load "rex-functions")

  ;; Set up the keymap tree.
  (load "rex-keybindings")

  ;; Modal editing.
  (load "rex-evil")

  ;; Hydra lets you create keymap menus
  (load "rex-hydra")

  ;; Global configuration unrelated to specific external packages.
  (load "rex-settings")

  ;; Theme and font-face settings.
  (load "rex-ui")

  ;; Marginalia Orderless Vertico Embark Consult
  ;; M.         O.        V.      E.     C.
  (load "rex-movec")

  ;; Utilities related to code-completion.
  (load "rex-completion")

  ;; Version-control helpers.
  (load "rex-vc")

  ;; Utility packages
  (load "rex-utilities")

  ;; Programming support.
  (load "rex-programming")

  ;; Org mode, the swiss-army outline tool
  (load "rex-org")

  ;; Hacky code
  (load "rex-hacks")

  ;; mu4e
  (load "~/build/rex-email/rex-email"))

(use-package gcmh
  :diminish
  :hook (emacs-startup . gcmh-mode)
  :init
  (setq gcmh-idle-delay 'auto
        gcmh-auto-idle-delay-factor 10
        gcmh-high-cons-threshold #x1000000)) ; 16MB
